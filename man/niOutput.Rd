% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/niOutput.R
\encoding{UTF-8}
\name{niOutput}
\alias{niOutput}
\alias{niSeries}
\alias{niValue}
\alias{is.niOutput}
\alias{is.niSeries}
\alias{is.niValue}
\title{Create or test for Objects of Classes niOutput, niSeries, niValue}
\usage{
niOutput(x)

niSeries(x)

niValue(
  indexArea = stop("Required argument 'indexArea' missing with no default", call. = TRUE),
  call = stop("Required argument 'call' missing with no default", call. = TRUE),
  calculationParameters = stop("Required argument 'calculationParameters' missing", call.
    = TRUE),
  metadata = stop("Required argument 'metadata' missing with no default", call. = TRUE),
  year = stop("Required argument 'year' missing with no default", call. = TRUE),
  indicators = stop("Required argument 'indicators' missing with no default", call. =
    TRUE),
  indicatorData = stop("Required argument 'indicatorData' missing with no default", call.
    = TRUE),
  ICunits = stop("Required argument 'ICunits' missing with no default", call. = TRUE),
  ICunitMatrix = stop("Required argument 'ICunitMatrix' missing with no default", call. =
    TRUE),
  imputations = stop("Required argument 'imputations' missing with no default", call. =
    TRUE),
  BSunits = stop("Required argument 'BSunits' missing with no default", call. = TRUE),
  BSunitData = stop("Required argument 'BSunitData' missing with no default", call. =
    TRUE),
  BSunitWeights = stop("Required argument 'BSunitWeights' missing with no default", call.
    = TRUE),
  NIunitWeights = stop("Required argument 'NIunitWeights' missing with no default", call.
    = TRUE),
  BSunitIndices = stop("Required argument 'BSunitIndices' missing with no default", call.
    = TRUE),
  BSunitbbb = stop("Required argument 'BSunitbbb' missing with no default", call. = TRUE),
  indexWeights = stop("Required argument 'indexWeights' missing with no default", call. =
    TRUE),
  index = stop("Required argument 'index' missing with no default", call. = TRUE),
  bbb = stop("Required argument 'bbb' missing with no default", call. = TRUE)
)

is.niOutput(x)

is.niSeries(x)

is.niValue(x)
}
\arguments{
\item{x}{a list where each element is of class \code{niSeries} (\code{niOutput}),
\cr a list where each element is of class \code{niValue} (\code{niSeries}),
\cr or object to be tested (\code{is.niOutput}, \code{is.niSeries},
\code{is.niValue}).}

\item{indexArea}{string, name of NIunit.}

\item{call}{object of mode "call", unevaluated function call to
\code{calculateIndex}.}

\item{calculationParameters}{list of options chosen for the calculation
of indices in \code{calculateIndex}.}

\item{metadata}{numeric vector, \code{names(metadata) = c("nIndicators",
"nBSunits","nICunits","nImputations")} containing metadata describing the
input dataset.}

\item{year}{numeric scalar.}

\item{indicators}{character vector of indicator names.}

\item{indicatorData}{data.frame with indicator data.}

\item{ICunits}{integer vector of ICunit IDs.}

\item{ICunitMatrix}{\code{BSunit x indicator} matrix of ICunit IDs.}

\item{imputations}{optional data.frame listing indicators and ICunits with
imputed values.}

\item{BSunits}{character vector of BSunit names.}

\item{BSunitData}{data.frame with BSunit data.}

\item{BSunitWeights}{numeric \code{BSunits x indicator} matrix of
BSunit weights.}

\item{NIunitWeights}{numeric vector of NIunit weights.}

\item{BSunitIndices}{numeric \code{BSunit x nsim} matrix of \code{nsim} index
values per BSunit.}

\item{BSunitbbb}{numeric vector of bbb statistics per BSunit.}

\item{indexWeights}{numeric \code{BSunit x indicators} matrix of (NI)weights.}

\item{index}{numeric vector of \code{length = nsim} index values.}

\item{bbb}{numeric scalar, bbb statistic.}
}
\value{
\code{niOutput} returns a list of class \code{niOutput}, where each
  element is of class \code{niSeries}. \cr\code{niSeries} returns a list of
  class \code{niSeries}, where each element is of class \code{niValue}.
  \cr\code{niValue} returns \code{S3} object of class \code{niValue}
  \cr\code{is.niOutput}, \code{is.niSeries}, and \code{is.niValue} returns
  \code{TRUE} if their argument is of class \code{niOutput}, \code{niSeries},
  and \code{niValue} respectively.
}
\description{
\code{niOutput}, \code{niSeries}, \code{niValue} return \code{S3} objects of
classes \code{niOutput}, \code{niSeries}, \code{niValue} respectively.
\cr\code{is.niOutput}, \code{is.niSeries}, \code{is.niValue} tests if a
candidate object is of each of these classes.
}
\details{
Lists of class \code{niOutput} contain the results from the calculation of
a set of (time) series of Nature Index or thematic index values for a set of
NIunits. The function \code{\link{calculateIndex}} returns objects of class
\code{niOutput}. Each element of an \code{niOutput} list is itself a list of
class \code{niSeries} and contains the results from the calculation of
a (time) series of index values for a single NIunit.
Finally, each element of an \code{niSeries} list is a list of
class \code{niValue}. Objects of class \code{niValue} contain the results from
the calculation of a single Nature Index or thematic index value.
}
\seealso{
The following methods are available within \code{NIcalc}:
\code{\link{summary.niOutput}}, \code{\link{summary.niSeries}},
\code{\link{plot.niSeries}}, \code{\link{summaryWeights}},
\code{\link{plot.niValue}}, and \code{\link{plotWeights}}
\cr The vignette \code{objectsInNIcalc} gives a detailed description of S3
classes defined within \code{NIcalc}.
}
\author{
BÃ¥rd Pedersen
}
